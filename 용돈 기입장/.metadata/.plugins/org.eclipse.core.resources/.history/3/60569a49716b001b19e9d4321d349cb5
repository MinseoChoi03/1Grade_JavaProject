package AllowanceBook;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;

public class LookScreen extends JFrame {

	private JPanel Panel;
	private JButton closeBtn, nowDate, nowTime, findBtn, todayBtn, resultBtn;
	private JTextArea incomeA, spendA;
	private JComboBox year, month, date;
	
	private SimpleDateFormat format = new SimpleDateFormat ("yyyy-MM-dd");
	private SimpleDateFormat F_year = new SimpleDateFormat("yyyy");
	private Date now = new Date();
	private String time = format.format(now);
	private String yearF = F_year.format(now);
	
	private String yearCR, monthCR, dateCR;
	
	private ImageIcon closeBtnE = new ImageIcon(getClass().getResource("../image/closeBtnE.png"));
	private ImageIcon closeBtnB = new ImageIcon(getClass().getResource("../image/closeBtnB.png"));
	
	private ImageIcon findBtnE = new ImageIcon(getClass().getResource("../image/findBtnE.png"));
	private ImageIcon findBtnB = new ImageIcon(getClass().getResource("../image/findBtnB.png"));
	
	private ImageIcon todayBtnE = new ImageIcon(getClass().getResource("../image/todayBtnE.png"));
	private ImageIcon todayBtnB = new ImageIcon(getClass().getResource("../image/todayBtnB.png"));
	
	private ImageIcon resultBtnE = new ImageIcon(getClass().getResource("../image/resultBtnE.png"));
	private ImageIcon resultBtnB = new ImageIcon(getClass().getResource("../image/resultBtnB.png"));

	public LookScreen() {
		setTitle("한 눈에 보기");
		setIconImage(Toolkit.getDefaultToolkit().getImage(test.class.getResource("/image/MoneyGun.png")));
		Panel = new JPanel();
		Panel.setBackground(new Color(255, 222, 239));
		
		closeBtn = new JButton();
		closeBtn.setBounds(171, 545, 100, 40);
		closeBtn.setBorderPainted(false);
		closeBtn.setContentAreaFilled(false);
		closeBtn.setFocusable(false);	
		closeBtn.addMouseListener((MouseListener) new MouseAdapter() {
			public void mouseEntered(MouseEvent e) {
				closeBtn.setIcon(closeBtnE);
				closeBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
				}
			@Override
			public void mouseExited(MouseEvent e) {
				closeBtn.setIcon(closeBtnB);
				closeBtn.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
			}
		});	
		closeBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e)   {		
				try {
		            dispose();
				} catch (Exception e1) {
					e1.printStackTrace();
				};
			}
		});
		
		findBtn = new JButton();
		findBtn.setBounds(340, 48, 70, 35);
		findBtn.setBorderPainted(false);
		findBtn.setContentAreaFilled(false);
		findBtn.setFocusable(false);	
		findBtn.addMouseListener((MouseListener) new MouseAdapter() {
			public void mouseEntered(MouseEvent e) {
				findBtn.setIcon(findBtnE);
				findBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
				}
			@Override
			public void mouseExited(MouseEvent e) {
				findBtn.setIcon(findBtnB);
				findBtn.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
			}
		});	
		findBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e)   {		
				try {
	                FileReader fr = new FileReader("수입 내역.txt");    //String형으로 파일을 읽어온다.
	                BufferedReader br = new BufferedReader(fr);    //한줄씩읽기위해(그리고 빠른속도로 읽어들인다)
	                String str = null;        //while조건부
	               
	                while((str = br.readLine())!=null){
	                	System.out.println(str);        //null이 될때까지 한줄씩 읽어온다.
	                }
	               
	                br.close();        //읽어온 자원들을 해제한다.
				} catch (Exception e1) {
					e1.printStackTrace();
				};
			}
		});
		
		todayBtn = new JButton();
		todayBtn.setBounds(260, 48, 70, 35);
		todayBtn.setBorderPainted(false);
		todayBtn.setContentAreaFilled(false);
		todayBtn.setFocusable(false);	
		todayBtn.addMouseListener((MouseListener) new MouseAdapter() {
			public void mouseEntered(MouseEvent e) {
				todayBtn.setIcon(todayBtnE);
				todayBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
				}
			@Override
			public void mouseExited(MouseEvent e) {
				todayBtn.setIcon(todayBtnB);
				todayBtn.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
			}
		});	
		/*findBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e)   {		
				try {
		            dispose();
				} catch (Exception e1) {
					e1.printStackTrace();
				};
			}
		});*/
		
		resultBtn = new JButton();
		resultBtn.setBounds(260, 10, 150, 35);
		resultBtn.setBorderPainted(false);
		resultBtn.setContentAreaFilled(false);
		resultBtn.setFocusable(false);	
		resultBtn.addMouseListener((MouseListener) new MouseAdapter() {
			public void mouseEntered(MouseEvent e) {
				resultBtn.setIcon(resultBtnE);
				resultBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
				}
			@Override
			public void mouseExited(MouseEvent e) {
				resultBtn.setIcon(resultBtnB);
				resultBtn.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
			}
		});	
		findBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e)   {		
				try {
	                FileReader fr = new FileReader("수입 내역.txt");    //String형으로 파일을 읽어온다.
	                BufferedReader br = new BufferedReader(fr);    //한줄씩읽기위해(그리고 빠른속도로 읽어들인다)
	                String str = null;        //while조건부
	               
	                while((str = br.readLine())!=null){
	                	System.out.println(str);        //null이 될때까지 한줄씩 읽어온다.
	                }
	               
	                br.close();        //읽어온 자원들을 해제한다.
				} catch (Exception e1) {
					e1.printStackTrace();
				};
			}
		});
		
		nowDate = new JButton("오늘");
		nowDate.setHorizontalAlignment(SwingConstants.LEFT);
		nowDate.setFont(new Font("나눔스퀘어라운드 ExtraBold", Font.PLAIN, 16));
		nowDate.setBounds(2, 10, 75, 25);
		nowDate.setBorderPainted(false);
		nowDate.setContentAreaFilled(false);
		nowDate.setFocusable(false);
		
		nowTime = new JButton(time);
		nowTime.setHorizontalAlignment(SwingConstants.LEFT);
		nowTime.setFont(new Font("나눔스퀘어라운드 ExtraBold", Font.PLAIN, 16));
		nowTime.setBounds(52, 10, 140, 25);
		nowTime.setBorderPainted(false);
		nowTime.setContentAreaFilled(false);
		nowTime.setFocusable(false);
		
		String [] yearList = new String [12];
		String [] monthList = new String [12];
		String [] dateList= new String [31];
		
		for(int i = 0; i <= 11; i++) {
			int yearL = Integer.parseInt(yearF);
			yearList[i] = Integer.toString(yearL+i);
		}
		year = new JComboBox(yearList);
		year.setFocusable(false);
		year.setBorder(null);
		year.setFont(new Font("나눔스퀘어 ExtraBold", Font.PLAIN, 14));
		year.setSelectedIndex(0);
		year.setBounds(15, 55, 80, 25);
		
		for(int i = 0; i <= 11; i++) {
			monthList[i] = Integer.toString(i+1);
		}
		month = new JComboBox(monthList);
		month.setFocusable(false);
		month.setBorder(null);
		month.setFont(new Font("나눔스퀘어 ExtraBold", Font.PLAIN, 14));
		month.setSelectedIndex(0);
		month.setBounds(120, 55, 50, 25);
		
		for(int i = 0; i <= 30; i++) {
			dateList[i] = Integer.toString(i+1);
		}
		date = new JComboBox(dateList);
		date.setFocusable(false);
		date.setBorder(null);
		date.setFont(new Font("나눔스퀘어 ExtraBold", Font.PLAIN, 14));
		date.setSelectedIndex(0);
		date.setBounds(182, 55, 50, 25);
		
		incomeA = new JTextArea();
		incomeA.setBounds(12, 90, 410, 205);
		incomeA.setEditable(false);
		incomeA.setLineWrap(true);
		
		spendA = new JTextArea();
		spendA.setBounds(12, 310, 410, 205);
		spendA.setEditable(false);
		spendA.setLineWrap(true);
		
		Panel.add(nowDate);
		Panel.add(nowTime);
		Panel.add(year);
		Panel.add(month);
		Panel.add(date);
		Panel.add(resultBtn);
		Panel.add(todayBtn);
		Panel.add(findBtn);
		Panel.add(closeBtn);
		Panel.add(incomeA);
		Panel.add(spendA);
		
		Panel.setLayout(null);
		getContentPane().add(Panel);
		
		setResizable(false);
		setBounds(630, 120, 450, 650);
		setVisible(true);
	}
}
